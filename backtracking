# üß† Backtracking (Retroceso)

## ¬øQu√© es?

El algoritmo de **backtracking** (o retroceso) es una t√©cnica para resolver problemas que construyen soluciones paso a paso,  
**retrocediendo** cuando una decisi√≥n lleva a una soluci√≥n inv√°lida. Es una forma **optimizada de fuerza bruta**, ya que **evita caminos imposibles**.

## Caracter√≠sticas

- üîÑ Es **recursivo** y trabaja con decisiones sucesivas.
- ‚úÇÔ∏è **Descarta caminos inv√°lidos** tan pronto como sea posible.
- ‚úÖ Puede encontrar **una o todas** las soluciones v√°lidas.
- üß© Ideal para **problemas combinatorios con restricciones**.

## ¬øCu√°ndo usarlo?

- Cuando el problema requiere probar muchas combinaciones pero **con reglas claras que permiten podar ramas inv√°lidas**.
- Para encontrar soluciones en **rompecabezas, juegos, combinaciones, laberintos**, etc.
- Cuando se desea **minimizar el espacio explorado** aprovechando las restricciones del problema.

## Ejemplos

- Resolver un **Sudoku** con reglas estrictas.
- El cl√°sico problema de las **N reinas**.
- Encontrar **caminos v√°lidos en laberintos**.
- Generar **anagramas v√°lidos** con ciertas letras.
- Resolver **puzzles de l√≥gica**.

## Complejidad t√≠pica

| Caso                              | Complejidad (aproximada) |
|-----------------------------------|---------------------------|
| Peor caso (sin poda)              | `O(b^n)`                  |
| Con poda efectiva (caso pr√°ctico) | Mucho menor               |
| Problema N-Reinas                 | `O(N!)`                   |
| Sudoku                            | ~`O(9^m)` (`m` = celdas vac√≠as) |

---
